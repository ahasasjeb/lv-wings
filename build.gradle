plugins {
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	// Use the MDK-recommended minimum patch version for ForgeGradle
	id 'net.minecraftforge.gradle' version '[6.0.36,6.2)'
}

version = "${minecraft_version}-${mod_version}"
group = mod_group_id

base {
	archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	mappings channel: mapping_channel, version: mapping_version
	reobf = false
	copyIdeResources = true

	runs {
		configureEach {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
					property 'forge.logging.console.level', 'debug'
					property 'forge.enabledGameTestNamespaces', mod_id
		}

		client {
		}

		server {
			args '--nogui'
		}

		gameTestServer {
		}

		data {
			workingDirectory project.file('run-data')
			args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
		}
	}
}

sourceSets {
	main {
		output.resourcesDir = file("$buildDir/classes/java/main")
		resources {
			srcDir 'src/generated/resources'
		}
	}
}

repositories {
	// Standard repositories used by the MDK template
	mavenCentral()
	maven {
		name = 'Forge'
		url = 'https://maven.minecraftforge.net'
	}
	maven {
		name = 'Minecraft libraries'
		url = 'https://libraries.minecraft.net'
	}
}

// Note: avoid using a `minecraft { mods { ... } }` block here because some
// ForgeGradle/UserDevExtension versions do not expose a `mods` DSL. The mod
// sources are already picked up from `sourceSets.main` and from the
// `processResources` and run configurations above.

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('processResources', ProcessResources).configure {
	var replaceProperties = [
			minecraft_version: minecraft_version,
			minecraft_version_range: minecraft_version_range,
			forge_version: forge_version,
			forge_version_range: forge_version_range,
			loader_version_range: loader_version_range,
			mod_id: mod_id,
			mod_name: mod_name,
			mod_license: mod_license,
			mod_version: mod_version,
			mod_authors: mod_authors,
			mod_description: mod_description,
	]
	inputs.properties replaceProperties

	filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
		expand replaceProperties + [project: project]
	}

	destinationDir = sourceSets.main.output.classesDirs.singleFile
}

tasks.named('jar', Jar).configure {
	manifest {
		attributes([
				'Specification-Title'     : mod_id,
				'Specification-Vendor'    : mod_authors,
				'Specification-Version'   : '1',
				'Implementation-Title'    : project.name,
				'Implementation-Version'  : project.jar.archiveVersion,
				'Implementation-Vendor'   : mod_authors,
				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

publishing {
	publications {
		register('mavenJava', MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}